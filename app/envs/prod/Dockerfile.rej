diff a/app/envs/prod/Dockerfile b/app/envs/prod/Dockerfile	(rejected hunks)
@@ -4,41 +4,42 @@ ARG BASE_IMAGE=python:3.11-slim
 FROM $BASE_IMAGE AS base-image
 LABEL builder=true
 
+COPY --from=ghcr.io/astral-sh/uv:0.5 /uv /uvx /bin/
+
 WORKDIR /root/src/
 
-RUN pip3 install --no-cache-dir 'pdm>=2.12,<3'
+COPY pyproject.toml uv.lock ./
 
-COPY pyproject.toml pdm.lock ./
-RUN pdm lock --check
+# Enable bytecode compilation
+ENV UV_COMPILE_BYTECODE=1
+# Copy from the cache instead of linking since it's a mounted volume
+ENV UV_LINK_MODE=copy
 
 RUN apt-get update && apt-get install -y git
 
-
-RUN pdm config python.use_venv False && pdm sync --prod --group :all
-RUN mkdir -p /opt/ && mv __pypackages__/3.11/ /opt/pypackages/
-ENV PATH=/opt/pypackages/bin:$PATH
-ENV PYTHONPATH=/opt/pypackages/lib:$PYTHONPATH
+RUN --mount=type=cache,target=/root/.cache/uv \
+	uv sync --frozen --no-install-project --no-dev --no-editable
 
 COPY ./app/src/ ./app/envs/prod/entrypoint.sh ./app/envs/prod/gunicorn.conf.py ./app/envs/prod/celery-entrypoint.sh ./app/envs/prod/prometheus-cleanup.sh /root/src/
 
-RUN python3 -m compileall -b -f -q /root/
-RUN ENV=prod ENV_FILL_MISSING_VALUES=1 SECRET_KEY=dummy python3 manage.py collectstatic --no-input --clear
+RUN --mount=type=cache,target=/root/.cache/uv \
+	uv sync --frozen --no-dev --no-editable
+
+RUN ENV=prod ENV_FILL_MISSING_VALUES=1 SECRET_KEY=dummy uv run python3 manage.py collectstatic --no-input --clear
 
 
 FROM $BASE_IMAGE AS secondary-image
 LABEL builder=false
 
 RUN apt-get update \
-  && apt-get install -y wget \
-  && rm -rf /var/lib/apt/lists/*
+	&& apt-get install -y wget \
+	&& rm -rf /var/lib/apt/lists/*
 
 WORKDIR /root/src/
 ENV PYTHONUNBUFFERED=1
-ENV PATH=/opt/pypackages/bin:$PATH
-ENV PYTHONPATH=/opt/pypackages/lib:$PYTHONPATH
+ENV PATH="/root/src/.venv/bin:$PATH"
 
 COPY --from=base-image /root/src/ /root/src/
-COPY --from=base-image /opt/pypackages/ /opt/pypackages/
 
 
 
